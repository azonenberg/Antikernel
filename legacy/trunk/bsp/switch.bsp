////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                    //
//ANTIKERNEL v0.1                                                                                                     //
//                                                                                                                    //
//Copyright (c) 2012-2016 Andrew D. Zonenberg                                                                         //
//All rights reserved.                                                                                                //
//                                                                                                                    //
//Redistribution and use in source and binary forms, with or without modification, are permitted provided that the    //
//following conditions are met:                                                                                       //
//                                                                                                                    //
//   * Redistributions of source code must retain the above copyright notice, this list of conditions, and the        //
//     following disclaimer.                                                                                          //
//                                                                                                                    //
//   * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the      //
//     following disclaimer in the documentation and/or other materials provided with the distribution.               //
//                                                                                                                    //
//   * Neither the name of the author nor the names of any contributors may be used to endorse or promote products    //
//     derived from this software without specific prior written permission.                                          //
//                                                                                                                    //
//THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED  //
//TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL//
//THE AUTHORS BE HELD LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES       //
//(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR      //
//BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT//
//(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE      //
//POSSIBILITY OF SUCH DAMAGE.                                                                                         //
//                                                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Global stuff

//The target device
target	xc6slx25-2ftg256 scanpos 0

//20 MHz clock input
clock	clkin			input	P8	std LVCMOS33	freq 25M

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Gigabit Ethernet - port 0

//Receive clock from PHY
clock	eth0_rxc		input	J14	std LVCMOS25	freq 125M

//Pullups on rxd[] required for proper PHY initialization during reset
signal	eth0_rx_ctl		input	P11	std LVCMOS25
signal	eth0_rxd[0]		input	P9	std LVCMOS25	pullup
signal	eth0_rxd[1]		input	R9	std LVCMOS25	pullup
signal	eth0_rxd[2]		input	T9	std LVCMOS25	pullup
signal	eth0_rxd[3]		input	T8	std LVCMOS25	pullup

signal	eth0_txc		output	T7	std LVCMOS25	fast
signal	eth0_tx_ctl		output	R7	std LVCMOS25	fast
signal	eth0_txd[0]		output	T5	std LVCMOS25	fast
signal	eth0_txd[1]		output	R5	std LVCMOS25	fast
signal	eth0_txd[2]		output	T6	std LVCMOS25	fast
signal	eth0_txd[3]		output	P6	std LVCMOS25	fast

signal	eth0_mdio		inout	L14	std LVCMOS25	pullup
signal	eth0_mdc		output	K14	std LVCMOS25

signal	eth0_reset_n	output	M14	std LVCMOS25
signal	eth0_clk_25mhz	output	N14	std LVCMOS25

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Gigabit Ethernet - port 1

//Receive clock from PHY
clock	eth1_rxc		input	J16	std LVCMOS25	freq 125M

//Pullups on rxd[] required for proper PHY initialization during reset
signal	eth1_rx_ctl		input	N16	std LVCMOS25
signal	eth1_rxd[0]		input	P15	std LVCMOS25	pullup
signal	eth1_rxd[1]		input	P16	std LVCMOS25	pullup
signal	eth1_rxd[2]		input	R15	std LVCMOS25	pullup
signal	eth1_rxd[3]		input	R16	std LVCMOS25	pullup

signal	eth1_txc		output	R14	std LVCMOS25	fast
signal	eth1_tx_ctl		output	T15	std LVCMOS25	fast
signal	eth1_txd[0]		output	T12	std LVCMOS25	fast
signal	eth1_txd[1]		output	R12	std LVCMOS25	fast
signal	eth1_txd[2]		output	T13	std LVCMOS25	fast
signal	eth1_txd[3]		output	T14	std LVCMOS25	fast

signal	eth1_mdio		inout	M15	std LVCMOS25	pullup
signal	eth1_mdc		output	M16	std LVCMOS25

signal	eth1_reset_n	output	K16	std LVCMOS25
signal	eth1_clk_25mhz	output	K15	std LVCMOS25

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Gigabit Ethernet - port 2

//Receive clock from PHY
clock	eth2_rxc		input	E10	std LVCMOS25	freq 125M

//Pullups on rxd[] required for proper PHY initialization during reset
signal	eth2_rx_ctl		input	D16	std LVCMOS25
signal	eth2_rxd[0]		input	E13	std LVCMOS25	pullup
signal	eth2_rxd[1]		input	E15	std LVCMOS25	pullup
signal	eth2_rxd[2]		input	E16	std LVCMOS25	pullup
signal	eth2_rxd[3]		input	F15	std LVCMOS25	pullup

signal	eth2_txc		output	G16	std LVCMOS25	fast
signal	eth2_tx_ctl		output	F16	std LVCMOS25	fast
signal	eth2_txd[0]		output	H16	std LVCMOS25	fast
signal	eth2_txd[1]		output	H15	std LVCMOS25	fast
signal	eth2_txd[2]		output	H14	std LVCMOS25	fast
signal	eth2_txd[3]		output	H13	std LVCMOS25	fast

signal	eth2_mdio		inout	C15	std LVCMOS25	pullup
signal	eth2_mdc		output	C16	std LVCMOS25

signal	eth2_reset_n	output	B15	std LVCMOS25
signal	eth2_clk_25mhz	output	B16	std LVCMOS25

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Gigabit Ethernet - port 3

//Receive clock from PHY
clock	eth3_rxc		input	E7	std LVCMOS25	freq 125M

//Pullups on rxd[] required for proper PHY initialization during reset
signal	eth3_rx_ctl		input	A8	std LVCMOS25
signal	eth3_rxd[0]		input	B8	std LVCMOS25	pullup
signal	eth3_rxd[1]		input	A9	std LVCMOS25	pullup
signal	eth3_rxd[2]		input	A10	std LVCMOS25	pullup
signal	eth3_rxd[3]		input	B10	std LVCMOS25	pullup

signal	eth3_txc		output	A11	std LVCMOS25	fast
signal	eth3_tx_ctl		output	C11	std LVCMOS25	fast
signal	eth3_txd[0]		output	B14	std LVCMOS25	fast
signal	eth3_txd[1]		output	A13	std LVCMOS25	fast
signal	eth3_txd[2]		output	B12	std LVCMOS25	fast
signal	eth3_txd[3]		output	A12	std LVCMOS25	fast

signal	eth3_mdio		inout	A6	std LVCMOS25	pullup
signal	eth3_mdc		output	A7	std LVCMOS25

signal	eth3_reset_n	output	A5	std LVCMOS25
signal	eth3_clk_25mhz	output	C4	std LVCMOS25

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Quad SPI NOR flash

signal	spi_cs_n		output	T3	std LVCMOS33
signal	spi_sck			output	R11	std LVCMOS33
signal	spi_data[0]		inout	T10	std LVCMOS33
signal	spi_data[1]		inout	P10	std LVCMOS33
signal	spi_data[2]		inout	N12	std LVCMOS33	pullup
signal	spi_data[3]		inout	P12	std LVCMOS33	pullup
