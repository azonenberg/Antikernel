/***********************************************************************************************************************
*                                                                                                                      *
* ANTIKERNEL v0.1                                                                                                      *
*                                                                                                                      *
* Copyright (c) 2012-2016 Andrew D. Zonenberg                                                                          *
* All rights reserved.                                                                                                 *
*                                                                                                                      *
* Redistribution and use in source and binary forms, with or without modification, are permitted provided that the     *
* following conditions are met:                                                                                        *
*                                                                                                                      *
*    * Redistributions of source code must retain the above copyright notice, this list of conditions, and the         *
*      following disclaimer.                                                                                           *
*                                                                                                                      *
*    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the       *
*      following disclaimer in the documentation and/or other materials provided with the distribution.                *
*                                                                                                                      *
*    * Neither the name of the author nor the names of any contributors may be used to endorse or promote products     *
*      derived from this software without specific prior written permission.                                           *
*                                                                                                                      *
* THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED   *
* TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL *
* THE AUTHORS BE HELD LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES        *
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR       *
* BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT *
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE       *
* POSSIBILITY OF SUCH DAMAGE.                                                                                          *
*                                                                                                                      *
***********************************************************************************************************************/

/**
	@file
	@author Andrew D. Zonenberg
	@brief SPLASH build script for GRAFTON CPU
 */

#include <splashcore/splashcore.h>

using namespace std;

SPLASHFILE_EXPORT void CreateNodes(BuildGraph* graph)
{
	//Save some useful variables
	string srcdir = GetDirOfFile(CanonicalizePath(__FILE__));
	
	//Constgen stuff
	VerilogConstgenNode::CreateVerilogConstgenNode(graph, srcdir + "/GraftonCPUBranchOpcodes.constants");
	VerilogConstgenNode::CreateVerilogConstgenNode(graph, srcdir + "/GraftonCPUCoprocessorOpcodes.constants");
	VerilogConstgenNode::CreateVerilogConstgenNode(graph, srcdir + "/GraftonCPUCoprocessorRegisters.constants");
	VerilogConstgenNode::CreateVerilogConstgenNode(graph, srcdir + "/GraftonCPUELFLoader_states.constants");
	VerilogConstgenNode::CreateVerilogConstgenNode(graph, srcdir + "/GraftonCPUInstructionFunctions.constants");
	VerilogConstgenNode::CreateVerilogConstgenNode(graph, srcdir + "/GraftonCPUInstructionOpcodes.constants");
	VerilogConstgenNode::CreateVerilogConstgenNode(graph, srcdir + "/GraftonCPUL1Cache_states.constants");
	VerilogConstgenNode::CreateVerilogConstgenNode(graph, srcdir + "/GraftonCPUL1CacheBank_states.constants");
	VerilogConstgenNode::CreateVerilogConstgenNode(graph, srcdir + "/GraftonCPUPagePermissions.constants");
	CppConstgenNode::CreateCppConstgenNode(graph, srcdir + "/GraftonCPUPagePermissions.constants");
	VerilogConstgenNode::CreateVerilogConstgenNode(graph, srcdir + "/GraftonCPURegisterIDs.constants");
	VerilogConstgenNode::CreateVerilogConstgenNode(graph, srcdir + "/GraftonCPUSyscalls.constants");
	CppConstgenNode::CreateCppConstgenNode(graph, srcdir + "/GraftonCPUSyscalls.constants");
	
	VerilogConstgenNode::CreateVerilogConstgenNode(graph, srcdir + "/GraftonCPURPCDebugOpcodes.constants");
	CppConstgenNode::CreateCppConstgenNode(graph, srcdir + "/GraftonCPURPCDebugOpcodes.constants");
}

SPLASHFILE_EXPORT void CreateEdges(BuildGraph* /*graph*/)
{

}
