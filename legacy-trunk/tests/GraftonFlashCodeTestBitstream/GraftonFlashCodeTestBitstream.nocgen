////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                    //
//ANTIKERNEL v0.1                                                                                                     //
//                                                                                                                    //
//Copyright (c) 2012-2016 Andrew D. Zonenberg                                                                         //
//All rights reserved.                                                                                                //
//                                                                                                                    //
//Redistribution and use in source and binary forms, with or without modification, are permitted provided that the    //
//following conditions are met:                                                                                       //
//                                                                                                                    //
//   * Redistributions of source code must retain the above copyright notice, this list of conditions, and the        //
//     following disclaimer.                                                                                          //
//                                                                                                                    //
//   * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the      //
//     following disclaimer in the documentation and/or other materials provided with the distribution.               //
//                                                                                                                    //
//   * Neither the name of the author nor the names of any contributors may be used to endorse or promote products    //
//     derived from this software without specific prior written permission.                                          //
//                                                                                                                    //
//THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED  //
//TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL//
//THE AUTHORS BE HELD LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES       //
//(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR      //
//BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT//
//(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE      //
//POSSIBILITY OF SUCH DAMAGE.                                                                                         //
//                                                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// @file
// @author Andrew D. Zonenberg
// @brief NocGen script for generating GraftonFlashCodeTestBitstream

// Top-level module name
top GraftonFlashCodeTestBitstream

// Clock generation
pll MainClockPLL
	inclk clkin
	outclk clk_noc freq 25M duty 0.5 phase 0.0
endpll

// The flash
node flash BasicNetworkedQuadSPIFlashController
	
	output 1 spi_cs_n port spi_cs_n
	output 1 spi_sck  port spi_sck
	inout  4 spi_data port spi_data
	
	parameter FORCE_READ_ONLY 1
	
	rpc
	dma
endnode

// RAM for packet buffers and stack
node ram BlockRamAllocator
	rpc
	dma
endnode

// The MCU core
node cpu GraftonCPU

	// The CPU reset vector is the first address in cached virtual memory (0x40000000).
	// The MMU is pre-programmed at reset to map the boot loader into the first page of virtual memory
	// from this address.
	// We can use some nocgen macros here since they're expanded later on.
	parameter bootloader_host [[node_flash_addr]]
	
	//XC6SLX25 bitstream size (approx)	0x000C_48BE (~786KB)
	//Flash size						0x0010_0000	(1MB)
	//Firmware image size				0x0002_0000 (128KB)
	//Firmware image base				0x000E_0000 (896KB)
	parameter bootloader_addr 32'h000e0000

	rpc
	dma
endnode

