////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                    //
//ANTIKERNEL v0.1                                                                                                     //
//                                                                                                                    //
//Copyright (c) 2012-2016 Andrew D. Zonenberg                                                                         //
//All rights reserved.                                                                                                //
//                                                                                                                    //
//Redistribution and use in source and binary forms, with or without modification, are permitted provided that the    //
//following conditions are met:                                                                                       //
//                                                                                                                    //
//   * Redistributions of source code must retain the above copyright notice, this list of conditions, and the        //
//     following disclaimer.                                                                                          //
//                                                                                                                    //
//   * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the      //
//     following disclaimer in the documentation and/or other materials provided with the distribution.               //
//                                                                                                                    //
//   * Neither the name of the author nor the names of any contributors may be used to endorse or promote products    //
//     derived from this software without specific prior written permission.                                          //
//                                                                                                                    //
//THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED  //
//TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL//
//THE AUTHORS BE HELD LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES       //
//(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR      //
//BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT//
//(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE      //
//POSSIBILITY OF SUCH DAMAGE.                                                                                         //
//                                                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// @file
// @author Andrew D. Zonenberg
// @brief NocGen script for generating NetworkedDDR2ControllerTestBitstream

// Top-level module name
top NetworkedDDR2ControllerTestBitstream

//Pre-shared HMAC key for the name server to allow writing
namesrvr_key "ThisIsALongAndComplicatedPassword"

// Clock generation
pll MainClockPLL
	inclk clkin
	outclk clk_noc freq 50M duty 0.5 phase 0.0
	outclk clk_ddr_p freq 200M duty 0.5 phase 0.0
	outclk clk_ddr_n freq 200M duty 0.5 phase 180.0
endpll

// The RAM
node ram NetworkedDDR2Controller
	clock     clk_ddr_p   port clk_ddr_p
	clock     clk_ddr_n   port clk_ddr_n
	output 1  ddr2_ras_n  port ddr2_ras_n
	output 1  ddr2_cas_n  port ddr2_cas_n
	output 1  ddr2_udqs_p port ddr2_udqs_p
	output 1  ddr2_udqs_n port ddr2_udqs_n
	output 1  ddr2_ldqs_p port ddr2_ldqs_p
	output 1  ddr2_ldqs_n port ddr2_ldqs_n
	output 1  ddr2_udm    port ddr2_udm
	output 1  ddr2_ldm    port ddr2_ldm
	output 1  ddr2_we_n   port ddr2_we_n
	output 1  ddr2_ck_p   port ddr2_ck_p
	output 1  ddr2_ck_n   port ddr2_ck_n
	output 1  ddr2_cke    port ddr2_cke
	output 1  ddr2_odt    port ddr2_odt
	output 3  ddr2_ba     port ddr2_ba
	output 13 ddr2_addr   port ddr2_addr
	inout  16 ddr2_dq     port ddr2_dq

	rpc
	dma
	
	//ISE is dumb so we need to floorplan this...
	floorplan SLICE_X0Y16:SLICE_X29Y79
	floorplan RAMB16_X0Y8:RAMB16_X1Y38
	
endnode
