////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                    //
//ANTIKERNEL v0.1                                                                                                     //
//                                                                                                                    //
//Copyright (c) 2012-2016 Andrew D. Zonenberg                                                                         //
//All rights reserved.                                                                                                //
//                                                                                                                    //
//Redistribution and use in source and binary forms, with or without modification, are permitted provided that the    //
//following conditions are met:                                                                                       //
//                                                                                                                    //
//   * Redistributions of source code must retain the above copyright notice, this list of conditions, and the        //
//     following disclaimer.                                                                                          //
//                                                                                                                    //
//   * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the      //
//     following disclaimer in the documentation and/or other materials provided with the distribution.               //
//                                                                                                                    //
//   * Neither the name of the author nor the names of any contributors may be used to endorse or promote products    //
//     derived from this software without specific prior written permission.                                          //
//                                                                                                                    //
//THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED  //
//TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL//
//THE AUTHORS BE HELD LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES       //
//(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR      //
//BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT//
//(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE      //
//POSSIBILITY OF SUCH DAMAGE.                                                                                         //
//                                                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// @file
// @author Andrew D. Zonenberg
// @brief Top level module for PDU

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Global / clock configuration

top PDUTopLevel

//PLL configuration
//25 -> 875 MHz, divide from there
pll MainClockPLL
	inclk 		clkin
	outclk		clk_noc			freq 20M  duty 0.5 phase 0.0
	outclk		clk_25mhz		freq 25M  duty 0.5 phase 0.0
	outclk		clk_125mhz		freq 125M duty 0.5 phase 0.0
endpll

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Timing constraints

tig		outputs/error_leds*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// The output stages

node outputs OutputStageController
	output	10	pwr_oe			port pwr_oe
	input	10	oc_alert		port oc_alert
	
	output	10	pwr_leds		port pwr_leds
	output	10	error_leds		port error_leds

	rpc
	
	floorplan	SLICE_X0Y48:SLICE_X29Y77
	
endnode

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// The peripheral controller

node periph PDUPeripheralInterface

	inout	1	i2c_sda			port i2c_sda
	output	1	i2c_scl			port i2c_scl
	
	output	3	spi_cs_n		port spi_cs_n
	output	3	spi_mosi		port spi_mosi
	input	3	spi_miso		port spi_miso
	output	3	spi_sck			port spi_sck
	
	inout	10	gpio			port gpio
	
	input	1	voltage_mode_5	port voltage_mode_5
	input	1	voltage_mode_12	port voltage_mode_12
	
	output	1	fault_led		port fault_led

	rpc
	
	floorplan	SLICE_X0Y48:SLICE_X29Y77
	
endnode

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Control logic

// The MCU core
node cpu GraftonCPU

	parameter	bootloader_host [[node_flash_addr]]
	
	//Item							Low				High			Size
	//Flash size					0x0000_0000		0x000F_FFFF		1MB
	//FPGA bitstream				0x0000_0000		0x000C_5000 	~786KB
	//Application data				0x000D_0000		0x000D_FFFF		64KB
	//GRAFTON firmware image		0x000E_0000		0x000F_FFFF		128KB
	parameter	bootloader_addr 32'h000e0000
	
	//Enable debugging
	//parameter	debug_mode 1
	
	rpc
	dma
	
	//floorplan	CLOCKREGION_X0Y0:CLOCKREGION_XOY2
	
endnode

//Buffer RAM for the CPU and Ethernet logic
node ram BlockRamAllocator

	rpc
	dma
	
	floorplan	SLICE_X30Y40:SLICE_X53Y77
	
endnode

// The flash
node flash BasicNetworkedQuadSPIFlashController
	
	output 1 flash_spi_cs_n port spi_cs_n
	output 1 flash_spi_sck  port spi_sck
	inout  4 flash_spi_data port spi_data
	
	parameter FORCE_READ_ONLY 1
	
	rpc
	dma
	
	floorplan	CLOCKREGION_X1Y0:CLOCKREGION_X1Y2
	
endnode

//The MAC core
node eth0 NetworkedEthernetMAC

	parameter PHY_CHIPSET 		"KSZ9021"
	parameter PHY_INTERFACE		"RGMII"
	
	clock   	clk_25mhz		port clk_25mhz
	clock   	clk_125mhz		port clk_125mhz
	clock		eth0_rxc		port xmii_rxc
	
	input	1 	eth0_rx_ctl		port xmii_rx_ctl
	input	4 	eth0_rxd		port xmii_rxd
	
	output	1 	eth0_tx_ctl		port xmii_tx_ctl
	output	1 	eth0_txc		port xmii_txc
	output	4 	eth0_txd		port xmii_txd
	
	inout	1	eth0_mdio		port mgmt_mdio
	output	1	eth0_mdc		port mgmt_mdc
	
	output	1	eth0_reset_n	port reset_n
	output	1	eth0_clk_25mhz	port clkout

	//Tie off unused baseX ports
	constant	1'b0				port sfp_refclk
	constant	1'b0				port sfp_rx_p
	constant	1'b0				port sfp_rx_n
	nc								port sfp_tx_p
	nc								port sfp_tx_n

	rpc
	dma
	
	floorplan	CLOCKREGION_X1Y0:CLOCKREGION_X1Y3
	
endnode

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Cross-clock constraints

crossclock eth0_rxc		clk_noc
crossclock clk_125mhz	clk_noc
